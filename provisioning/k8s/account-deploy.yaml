---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: account-sa
  labels:
    app.kubernetes.io/component: account
    app.kubernetes.io/name: banking-demo

---
apiVersion: v1
kind: Service
metadata:
  name: account-svc
  labels:
    app.kubernetes.io/component: account
    app.kubernetes.io/name: banking-demo
spec:
  selector:
    app.kubernetes.io/component: account
    app.kubernetes.io/name: banking-demo
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: account-vs
  labels:
    app.kubernetes.io/component: account
    app.kubernetes.io/name: banking-demo
spec:
  hosts:
    - banking.styra-demo.com
  gateways:
    - istio-system/banking-demo-gw
  http:
    - match:
        - uri:
            prefix: /account
      route:
        - destination:
            port:
              number: 80
            host: account-svc
            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-deploy
  labels:
    app.kubernetes.io/component: account
    app.kubernetes.io/name: banking-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: account
      app.kubernetes.io/name: banking-demo
  template:
    metadata:
      labels:
        opa-istio-authz: "true"
        app.kubernetes.io/component: account
        app.kubernetes.io/name: banking-demo
        
    spec:
      serviceAccountName: account-sa
      hostPID: false
      hostIPC: false
      hostNetwork: false
      containers:
        - name: account
          image: adamsandor83/account:latest
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
          ports:
            - containerPort: 8080
          livenessProbe:
             httpGet:
               path: /actuator/health
               scheme: HTTP
               port: 8080
             initialDelaySeconds: 20
             periodSeconds: 5
          readinessProbe:
             httpGet:
               path: /actuator/health
               scheme: HTTP
               port: 8080
             initialDelaySeconds: 15
             periodSeconds: 5
          resources:
           limits:
             cpu: 1
             memory: 512Mi
           requests:
             cpu: 100m
             memory: 256Mi
        - name: opa
          image: openpolicyagent/opa:0.40.0-envoy-rootless
          imagePullPolicy: Always
          args:
            - "run"
            - "--server"
            - "--ignore=.*"
            - "--config-file=/config/conf.yaml"
            - "--authorization=basic"
            - "--addr=http://127.0.0.1:8181"
            - "--diagnostic-addr=0.0.0.0:8282"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - all
          volumeMounts:
            - readOnly: true
              mountPath: /config/conf.yaml
              subPath: conf.yaml
              name: opa-config-vol
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5      # Tune these periods for your environemnt
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health?bundle=true  # Include bundle activation in readiness
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: opa-config-vol
          configMap:
            name: opa-istio-config
